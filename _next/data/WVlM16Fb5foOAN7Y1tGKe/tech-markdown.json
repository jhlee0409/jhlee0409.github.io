{"pageProps":{"categories":[{"title":"blockchain","sub":[{"title":"DApp","count":1},{"title":"solidity","count":4}]},{"title":"platform","sub":[{"title":"AWS","count":2},{"title":"Google Analytics 4","count":1}]},{"title":"tech","sub":[{"title":"CS","count":1},{"title":"CSS","count":2},{"title":"Data_Structure_&_Algorithms","count":15},{"title":"HTML","count":1},{"title":"javascript","count":4},{"title":"markdown","count":1},{"title":"Next.js","count":1},{"title":"programming","count":3},{"title":"react","count":2},{"title":"refactoring","count":3},{"title":"typescript","count":2}]}],"data":[{"data":{"title":"react-markdown에서 image css 적용하기","date":"2022-09-02","tags":["TIL","React","markdown","react-markdown","custom css"],"draft":false,"summary":"react-markdown에서 image 태그에 css를 적용해 커스텀 해보자","mainCategory":"tech","subCategory":"markdown"},"content":"\n# 서론\n\n- 이 포스팅은 `react-markdown` 라이브러리를 쓰고 있는 유저들에게 해당된다.\n- 아무런 추가 설정없이 마크다운에 이미지를 넣게 된다면 매우 만족스럽지 못하게 이미지가 나온다.\n- 이번 포스팅에서는 간단하게 이미지 css를 적용할 수 있는 방법을 설명한다.\n- 바로 시작\n\n# 1. 결과물\n\n- 일단 Before, After 먼저 공개\n\n## 1-1 Before\n\n![Before](/assets/posts/til/markdown/react-markdown에서-image-css-적용하기/Untitled.png)\n\n## 1-2 After\n\n![After](/assets/posts/til/markdown/react-markdown에서-image-css-적용하기/Untitled1.png)\n\n\n# 2. 과정\n- 이번 포스팅에서 사용될 markdown\n```markdown\n![업데이트 선택](...image src path)\n```\n\n## 2-1 이미지를 커스텀하기 위한 컴포넌트 생성\n```jsx\nconst ImageComponent = ({ node, ...props }) => {\n\t// props: {src: '', alt: ''}\n\t// node : props를 포함한 추가 정보들을 담은 객체, node 객체에서 props는 properties를 가리킴, \n\t//        여기서는 사용 안함, 이런게 있다\n  return (\n    <div>\n       <img {...props} alt={props.alt} />\n    </div>\n\n  )\n}\n\nexport default  ImageComponent\n```\n\n## 2-2 이미지 컴포넌트를 components에 전달\n\n```jsx\nimport ReactMarkdown from \"react-markdown\";\n// ... 기타 플러그인 제외\n<ReactMarkdown\n\tcomponents={{\n\t img: ImageComponent,\n\t}}>\n\t{content} // 마크다운 파일의 내용\n</ReactMarkdown>\n//...\n```\n\n- 이후에도 커스텀하고 싶은 태그가 있다면 `img` 와 같이 해당 태그를 추가하고 똑같이 컴포넌트를 생성해 전달해주면 된다.\n- 여기까지만 하면 완전 기본 설정은 끝난 것 (`div` 태그 추가한 것 이외에는 설정 전 Before 와 똑같음)\n\n## 2-3 이미지 아래 부연 설명 추가\n\n```jsx\n// 2-1 에서 ~~ \nconst ImageComponent = ({ node, ...props }) => {\n\treturn (\n\t\t<div>\n\t\t\t<img {...props} alt={props.alt} />\n\t\t\t<p> {`▲ ${props.alt}`}</p>\n\t\t</div>\n  )\n}\n\nexport default  ImageComponent\n```\n\n- 여기까지 하면 아래의 사진처럼 보일 것이다.\n\n![중간 점검](/assets/posts/til/markdown/react-markdown에서-image-css-적용하기/Untitled2.png)\n\n\n## 2-4 CSS 추가\n\n```jsx\nimport 'sample.css'\n// 2-3 에서 ~~ \nconst ImageComponent = ({ node, ...props }) => {\n\treturn (\n\t\t<div className=\"markdown-image-box\">\n\t\t\t<img {...props} alt={props.alt} />\n\t\t\t<p> {`▲ ${props.alt}`}</p>\n\t\t</div>\n  )\n}\n\nexport default  ImageComponent\n```\n\n```css\n.markdown-image-box {\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n}\n.markdown-image-box > img {\n\tpadding: 10px;\n}\n```\n\n- 추가 후 결과물\n\n![After에서 봤던 결과물](/assets/posts/til/markdown/react-markdown에서-image-css-적용하기/Untitled1.png)\n\n\n\n#\n\n# 결론\n\n- 이번 포스팅은 `css 적용은 이렇게 한다.` 라고 알려주기 위한 간단한 작업에 불과하다. (물론 필자는 이대로 쓰는.. )\n- 과정을 보면 css 적용을 위한 프레임을 짜는 게 어려운 작업은 아니다.\n\n#\n\n#### 피드백은 언제나 환영입니다.","path":"react-markdown에서 image css 적용하기"}]},"__N_SSG":true}