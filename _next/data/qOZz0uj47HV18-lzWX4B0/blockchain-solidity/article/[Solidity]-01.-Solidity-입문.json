{"pageProps":{"categories":[{"title":"blockchain","sub":[{"title":"DApp","count":1},{"title":"solidity","count":4}]},{"title":"platform","sub":[{"title":"AWS","count":2},{"title":"Google Analytics 4","count":1}]},{"title":"tech","sub":[{"title":"CS","count":1},{"title":"CSS","count":2},{"title":"Data_Structure_&_Algorithms","count":13},{"title":"HTML","count":1},{"title":"javascript","count":4},{"title":"markdown","count":1},{"title":"Next.js","count":1},{"title":"programming","count":3},{"title":"react","count":2},{"title":"refactoring","count":3},{"title":"typescript","count":2}]}],"data":{"title":"[Solidity] 01. Solidity 입문","date":"2022-08-28","tags":["TIL","Udemy","Blockchain","Solidity","Remix"],"draft":false,"summary":"Solidity 입문"},"content":"\n## Remix\n- `스마트 계약`을 개발, 배포, 관리할 수 있는 통합 개발 환경\n\n### 스마트 계약이란?\n- 두 계약 당사자 간에 이뤄지는 협의에 대한 자동화된 계약\n\n### 스마트 계약의 유용성\n- 새로운 시스템이 기존의 블록체인 네트워크를 활용할 수 있다.\n    - 자체 블록체인을 만드는 것에는 많은 리소스가 투입된다.\n    - `이더리움`과 같은 기존의 블록체인을 이용해서 `스마트 게약`을 통해 해당 블록체인을 활용\n\n\n## Solidity란?\n- `스마트 계약`의 작성과 구현 위한 객체 지향 프로그래밍 언어\n\n## 0. import solidity\n\n```solidity\n// 0.7.0 <= solidity <0.9.0; 를 의미\npragma solidity >=0.7.0 <0.9.0;\n```\n\n\n\n## 1. 변수\n\n- 값을 저장하기 위해 예약된 메모리 공간\n- `정수(integer)`, `문자열(string)`, `불리언(bool)`\n\n```solidity\n// 계약 정의\ncontract simpleStorage {\n    // type name = value;\n\tuint storeData = 23;\n\tstring names = 'jack';\n\tbool switchOn = true;\n}\n```\n\n## 2. 함수\n\n- 애플리케이션 어디에서나 사용할 수 있는 재사용이 가능한 코드 그룹\n- `arguments`에는 넘길 값과 함께 앞에 타입을 정해준다.\n```solidity\nfunction set(uint x) {\n    // variable = new value\n\tstoreData = x;\n};\n\n```\n\n## 3. public\n\n- `contract` 외부에서 호출 가능\n- 다른 `contract`에서도 `public`이 붙은 함수 호출 가능\n- 반대는 `private`\n\n```solidity\nfunction set(uint x) public {\n\tstoreData = x;\n};\n```\n\n## 4. view\n\n- `state`를 수정할 수 없다는 것을 알리는 전역 제어자(Global Modifier)\n- 오직 `read`만 가능\n\n```solidity\nfunction get() public view {\n\treturn storeData;\n}\n```\n\n## 4. returns\n\n- 함수 자체와 관련이 있다.\n- `storeData`를 반환하는 것이 아님\n- `contract`에 대한 `state`를 반환하게 해준다.\n- e.g. `returns (uint)` : `정수` 타입의 `state`를 `return`하겠다는 뜻\n\n```solidity\nfunction get() public view returns (uint) {\n\treturn storeData;\n}\n```\n\n#\n\n#### 피드백은 언제나 환영입니다.\n\n"},"__N_SSG":true}