{"pageProps":{"categories":[{"title":"blockchain","sub":[{"title":"DApp","count":1},{"title":"solidity","count":4}]},{"title":"platform","sub":[{"title":"AWS","count":2},{"title":"Google Analytics 4","count":1}]},{"title":"tech","sub":[{"title":"CS","count":1},{"title":"CSS","count":2},{"title":"Data_Structure_&_Algorithms","count":14},{"title":"HTML","count":1},{"title":"javascript","count":4},{"title":"markdown","count":1},{"title":"Next.js","count":1},{"title":"programming","count":3},{"title":"react","count":2},{"title":"refactoring","count":3},{"title":"typescript","count":2}]}],"data":{"title":"이미지를 어디에 저장할까","date":"2022-08-31","tags":["TIL","React","Image and Icon","src","public"],"draft":false,"summary":"이미지와 같은 에셋들은 어디에 저장할까? src vs public","mainCategory":"tech","subCategory":"react"},"content":"# 서론\n\n- `React`나 `Next.js`를 사용하다 보면 `이미지`를 어디에 저장해야할지 고민할 때가 있다.\n- 크게 이미지를 사용하는 방식은 3가지가 있다.\n\n# 1. `public` 폴더에 저장하여 사용\n\n- 첫번째 방법은 `public` 폴더에 저장하여 사용하는 방법이다.\n- `public`에 있는 파일들은 정적 파일이며 동적으로 불러와 사용하기 쉽다.\n- 빌드 시 영향이 가지 않는 폴더이며 `webpack`으로 처리되지 않고 `빌드된 폴더`에 `그대로` 저장된다.\n- `Next.js`의 경우, 사용자가 요청할 때 자체적으로 제공해주는 `next/image`컴포넌트를 통해 `이미지를 최적화`해준다. 그렇기에 빌드 시에 허비되는 시간이 없으며, `src`에 저장하지 않아도 된다.\n\n\n# 2. `src` 폴더에 저장하여 사용\n\n- 두번째 방법은 `src` 폴더에 저장하여 사용하는 방법이다.\n- `React`와 같은 자체적으로 최적화할 수 있는 방법이 없는 경우에서는 주로 이 방법을 사용한다.\n- 해당 이미지를 쓰는 컴포넌트 폴더에 같이 저장해 별도로 이미지를 관리하거나, `assets`에서 관리하는 등 구조는 다양하다.\n- `webpack`에서 처리되기 때문에 추가적인 최적화가 가능하다.\n\n\n# 3. 외부 서버 이미지 사용\n\n- 세번째 방법은 `AWS S3`와 같은 외부 스토어에 저장 후 불러와 쓰는 방법이다.\n- 따로 이미지에 대한 관리에 신경 쓰지 않아도 된다.\n- 이미지가 바뀌어도 브라우저 캐시 때문에 바뀌기 이전에 이미지가 불러와진다. 그렇기 때문에 이미지가 바뀔 시에 `content hash`과 같은 특정한 값들을 부여해서 저장하거나 받아올 때 다르게 받아와야한다. 아니면 캐싱시간을 짧게 가지는 것 또한 방법이다.\n\n#\n\n### 참고\n- 각각의 이미지를 사용하는 방법은 따로 포스팅으로 다룰 예정이다.\n\n### 참조\n- [Where to Store Images in React App](https://www.upbeatcode.com/react/where-to-store-images-in-react-app/)\n- [Image Component and Image Optimization](https://nextjs.org/docs/basic-features/image-optimization#local-images)\n\n#\n\n### 피드백은 언제나 환영입니다."},"__N_SSG":true}