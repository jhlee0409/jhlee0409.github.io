{"pageProps":{"categories":[{"title":"tech","sub":[{"title":"refactoring","count":3},{"title":"styled_components","count":1},{"title":"typescript","count":1}]},{"title":"til","sub":[{"title":"javascript","count":1}]}],"data":[{"data":{"title":"스타일 상속","date":"2022-07-22","tags":["TIP","CSS In JS","Styled-components"],"draft":false,"summary":"스타일 상속 시키기"},"content":"\r\n# Styled-components에서 css 상속 시키기\r\n\r\n- 상속시킬 컴포넌트에 `className`만 `props`로 넘겨주기만 하면된다\r\n\r\n```jsx\r\n// ex) Buttonn 컴포넌트의 css까지 상속시키고 싶을때\r\n//Nested.js\r\n\r\nimport styled from \"styled-components\";\r\nimport Button from \"./Button\";\r\n\r\nconst NestedButton = () => {\r\n  return <NestedButtonStyle />;\r\n};\r\n\r\nconst NestedButtonStyle = styled(Button)`\r\n\t...styling\r\n`;\r\n```\r\n\r\n- 단순히 `import`만 해서는 css가 적용된 컴포넌트를 상속시킬 수는 없다.\r\n- 이렇게 상속시키고자 하는 컴포넌트에 `className`을 `props`로 넘겨준다면 상속가능하다.\r\n\r\n```jsx\r\n//Button.js\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = ({ className }) => {\r\n  return <ButtonStyle className={className} />;\r\n};\r\n\r\nconst ButtonStyle = styled.button`\r\n\t...styled\r\n`;\r\n\r\nexport default Button;\r\n```\r\n\r\n- 단순하게 스타일만 적용시킬꺼라면 `styled`를 이용해 css만 지정해줘도 된다.\r\n- 위의 경우는 css 이외에 다양한 event를 적용시키기에 유용하다.\r\n\r\n```jsx\r\n//Button.js\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n\t...styled\r\n`;\r\nexport default Button;\r\n```\r\n","path":"스타일 상속"}]},"__N_SSG":true}